{% extends 'base.html.twig' %}

{% block title %}Hello AppController!{% endblock %}

{% block body %}
<main class="radient-background">
<h1 class="bg-red-500 w-full text-7xl"></h1>
                
    {# <div class="flex justify-center"> #}
        <section id="formSection" class="min-h-screen flex items-center justify-center px-8 py-8 sm:px-12 lg:col-span-7 lg:px-16 lg:py-12 xl:col-span-6">
            <div class="max-w-xl lg:max-w-3xl">

            {{ form_start(form, {
                attr: {
                    'id': 'my-form',
                    'class': 'w-full h-full',
                    }
                })
            }}

                <div class="col-span-6">
                    {{ form_row(form.characterName, {
                    attr: {
                        'class': 'p-2 mt-1 w-full rounded-md border-gray-200 bg-white text-sm text-gray-700 shadow-sm'
                        },
                    label_attr: {'class': 'mt-2 block text-sm font-medium text-gray-700'},
                    }) }}
                </div>

                {# <div class="col-span-6 sm:col-span-3">
                    {{ form_row(form.genreNames, {
                    attr: {'class': 'p-2 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50'},
                    label_attr: {'class': 'mt-2 block text-sm font-medium text-gray-700'},
                    }) }}
                </div> #}
            
                <div class="mt-4 col-span-6 grid grid-cols-3 gap-4">
                {# Itération sur chaque choix pour genreNames #}
                {% for genreName in form.genreNames %}
                    <div class="flex items-center">
                        {# Rendu de la case à cocher avec les classes Tailwind #}
                        {{ form_widget(genreName, {
                            'attr': {'class': 'h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded'}
                        }) }}
                        {# Rendu du label avec les classes Tailwind #}
                        {{ form_label(genreName, null, {
                            'label_attr': {'class': 'ml-2 block text-sm text-gray-900'}
                        }) }}
                    </div>
                {% endfor %}
                </div>
                {{ form_errors(form.genreNames) }}



                <div class="col-span-6 sm:col-span-3">
                    {{ form_row(form.authorName, {
                    attr: {'class': 'p-2 mt-1 w-full rounded-md border-gray-200 bg-white text-sm text-gray-700 shadow-sm'},
                    label_attr: {'class': 'mt-2 block text-sm font-medium text-gray-700'},
                    }) }}
                </div>

                <div class="col-span-6 sm:col-span-3">
                    {{ form_row(form.wordsCount, {
                    attr: {'class': 'p-2 mt-1 w-full rounded-md border-gray-200 bg-white text-sm text-gray-700 shadow-sm'},
                    label_attr: {'class': 'mt-2 block text-sm font-medium text-gray-700'},
                    }) }}
                </div>

                <div class="col-span-6 sm:col-span-3">
                    {{ form_row(form.languageName, {
                    attr: {'class': 'p-2 mt-1 w-full rounded-md border-gray-200 bg-white text-sm text-gray-700 shadow-sm'},
                    label_attr: {'class': 'mt-2 block text-sm font-medium text-gray-700'},
                    }) }}
                </div>




                        <div class="mt-6 col-span-6 sm:col-span-3 flex justify-center">
                        
                        {{ form_row(form.submit, {
                            attr: {'class': 'mt-2 inline-block shrink-0 rounded-md border border-cambridge-blue bg-cambridge-blue px-12 py-3 text-sm font-medium text-white transition hover:bg-transparent hover:text-cambridge-blue focus:outline-none focus:ring active:text-blue-500'},
                        }) }}
                    </div>
                {{ form_end(form)}}
            </div>
        </div>
    </section>

    <section id="responseSection"  class="min-h-screen flex items-center justify-center px-8 py-8 sm:px-12 lg:col-span-7 lg:px-16 lg:py-12 xl:col-span-6" style="display: none">
        
    </section>
    
</main>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('my-form'); 
        form.addEventListener('submit', function (event) {
            event.preventDefault();
            const formData = new FormData(form);

            fetch(form.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                },
            })
            .then(response => response.json())
            .then(data => {
                // si on reçoit bien la reponse
                if (data.success) {
                    // faire disparaître le formulaire
                    const formSection = document.getElementById('formSection');
                    // effet de transition immédiat
                    formSection.classList.add('fade-out');
                    // Après 1s
                    setTimeout(() => {
                        // Cacher après la transition
                        formSection.style.display = 'none'; 
                        formSection.classList.remove('flex');
                        // insérer la réponse
                        const responseSection = document.getElementById('responseSection');
                        responseSection.innerHTML = data.inputText;
                        responseSection.classList.add('fade-in');
                        responseSection.style.display = 'block';
                        responseSection.style.opacity = 0;
                        setTimeout(() => responseSection.style.opacity = 1, 10); // Léger délai pour commencer la transition
                    }, 1000)
                    } else {
                    // Handle failure
                    console.error('Form submission failed', data);
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    });

</script>
{% endblock %}
